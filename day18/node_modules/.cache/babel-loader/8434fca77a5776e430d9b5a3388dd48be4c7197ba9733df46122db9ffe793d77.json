{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./BoardsDetail.css\";\nimport addImage from \"../../../asset/add_image.png\";\nimport { useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardsDetail() {\n  _s();\n  // 입력값 저장하는 상태 설정하기\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  // 입력값에 문제가 있을 경우 보여줄 에러메세지 저장하는 상태 설정하기\n  const [nameError, setNameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [titleError, setTitleError] = useState(\"\");\n  const [contentError, setContentError] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n\n  // 변경값 확인하여 상태에 저장하기\n  const onChangeName = event => {\n    setName(event.target.value);\n\n    // early-exit 패턴\n    if (event.target.value && password && title && content) return setIsActive(true);\n    setIsActive(false);\n  };\n  const onChangePassword = event => {\n    setPassword(event.target.value);\n    if (name && event.target.value && title && content) return setIsActive(true);\n    setIsActive(false);\n  };\n  const onChangeTitle = event => {\n    setTitle(event.target.value);\n    if (name && password && event.target.value && content) return setIsActive(true);\n    setIsActive(false);\n  };\n  const onChangeContent = event => {\n    setContent(event.target.value);\n    if (name && password && title && event.target.value) return setIsActive(true);\n    setIsActive(false);\n  };\n\n  // 등록하기 버튼 눌렀을때 실행되는 함수\n  const onClickSignup = () => {\n    // 0. 에러상태 초기화\n    let hasError = false;\n\n    // 1. 작성자 이름 검증하기\n    if (name.trim() === \"\") {\n      setNameError(\"필수입력 사항입니다.\");\n      hasError = true;\n    } else {\n      setNameError(\"\");\n    }\n    // 2. 비밀번호 검증하기\n    if (password.length === 0) {\n      setPasswordError(\"필수입력 사항입니다.\");\n      hasError = true;\n    } else {\n      setPasswordError(\"\");\n    }\n\n    // 3. 제목 검증하기\n    if (title.trim() === \"\") {\n      setTitleError(\"필수입력 사항입니다.\");\n      hasError = true;\n    } else {\n      setTitleError(\"\");\n    }\n    // 4. 내용 검증하기\n    if (content.trim() === \"\") {\n      setContentError(\"필수입력 사항입니다.\");\n      hasError = true;\n    } else {\n      setContentError(\"\");\n    }\n    // 5. 성공알람 보여주기\n    if (hasError === false) {\n      alert(\"게시글 등록이 가능한 상태입니다!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(BoardsDetail, \"YqfjKRRwuSjphLANMgmjirM3dWI=\");\n_c = BoardsDetail;\nexport default BoardsDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardsDetail\");","map":{"version":3,"names":["React","addImage","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","BoardsDetail","_s","name","setName","password","setPassword","title","setTitle","content","setContent","nameError","setNameError","passwordError","setPasswordError","titleError","setTitleError","contentError","setContentError","isActive","setIsActive","onChangeName","event","target","value","onChangePassword","onChangeTitle","onChangeContent","onClickSignup","hasError","trim","length","alert","_c","$RefreshReg$"],"sources":["/Users/happy/Desktop/REACT-NATIVE/test/13th_homework/day18/src/routes/boards/new/BoardsDetail.js"],"sourcesContent":["import React from \"react\";\nimport \"./BoardsDetail.css\";\nimport addImage from \"../../../asset/add_image.png\";\nimport { useState } from \"react\";\n\nfunction BoardsDetail() {\n\t// 입력값 저장하는 상태 설정하기\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [title, setTitle] = useState(\"\");\n\tconst [content, setContent] = useState(\"\");\n\n\t// 입력값에 문제가 있을 경우 보여줄 에러메세지 저장하는 상태 설정하기\n\tconst [nameError, setNameError] = useState(\"\");\n\tconst [passwordError, setPasswordError] = useState(\"\");\n\tconst [titleError, setTitleError] = useState(\"\");\n\tconst [contentError, setContentError] = useState(\"\");\n\tconst [isActive, setIsActive] = useState(false);\n\n\t// 변경값 확인하여 상태에 저장하기\n\tconst onChangeName = (event) => {\n\t\tsetName(event.target.value);\n\n\t\t// early-exit 패턴\n\t\tif (event.target.value && password && title && content)\n\t\t\treturn setIsActive(true);\n\n\t\tsetIsActive(false);\n\t};\n\n\tconst onChangePassword = (event) => {\n\t\tsetPassword(event.target.value);\n\n\t\tif (name && event.target.value && title && content)\n\t\t\treturn setIsActive(true);\n\n\t\tsetIsActive(false);\n\t};\n\n\tconst onChangeTitle = (event) => {\n\t\tsetTitle(event.target.value);\n\n\t\tif (name && password && event.target.value && content)\n\t\t\treturn setIsActive(true);\n\n\t\tsetIsActive(false);\n\t};\n\n\tconst onChangeContent = (event) => {\n\t\tsetContent(event.target.value);\n\n\t\tif (name && password && title && event.target.value)\n\t\t\treturn setIsActive(true);\n\n\t\tsetIsActive(false);\n\t};\n\n\t// 등록하기 버튼 눌렀을때 실행되는 함수\n\tconst onClickSignup = () => {\n\t\t// 0. 에러상태 초기화\n\t\tlet hasError = false;\n\n\t\t// 1. 작성자 이름 검증하기\n\t\tif (name.trim() === \"\") {\n\t\t\tsetNameError(\"필수입력 사항입니다.\");\n\t\t\thasError = true;\n\t\t} else {\n\t\t\tsetNameError(\"\");\n\t\t}\n\t\t// 2. 비밀번호 검증하기\n\t\tif (password.length === 0) {\n\t\t\tsetPasswordError(\"필수입력 사항입니다.\");\n\t\t\thasError = true;\n\t\t} else {\n\t\t\tsetPasswordError(\"\");\n\t\t}\n\n\t\t// 3. 제목 검증하기\n\t\tif (title.trim() === \"\") {\n\t\t\tsetTitleError(\"필수입력 사항입니다.\");\n\t\t\thasError = true;\n\t\t} else {\n\t\t\tsetTitleError(\"\");\n\t\t}\n\t\t// 4. 내용 검증하기\n\t\tif (content.trim() === \"\") {\n\t\t\tsetContentError(\"필수입력 사항입니다.\");\n\t\t\thasError = true;\n\t\t} else {\n\t\t\tsetContentError(\"\");\n\t\t}\n\t\t// 5. 성공알람 보여주기\n\t\tif (hasError === false) {\n\t\t\talert(\"게시글 등록이 가능한 상태입니다!\");\n\t\t}\n\t};\n\n\treturn <></>;\n}\n\nexport default BoardsDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}