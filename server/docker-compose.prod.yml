version: '3.8'
services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - '8080:8080'
        env_file:
            - .env.production
        depends_on:
            - postgres
            - mongo
            - redis
            - elasticsearch
            - logstash
            - kibana
        networks:
            - my_network

    postgres:
        image: postgres:14
        environment:
            POSTGRES_USER: ${POSTGRE_DB_USERNAME}
            POSTGRES_PASSWORD: ${POSTGRE_DB_PASSWORD}
            POSTGRES_DB: ${POSTGRE_DB_DATABASE}
        networks:
            - my_network

    mongo:
        image: mongo:5.0
        networks:
            - my_network

    redis:
        image: redis:6-alpine
        networks:
            - my_network

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
        environment:
            - discovery.type=single-node
        networks:
            - my_network

    logstash:
        image: docker.elastic.co/logstash/logstash:7.17.4
        volumes:
            - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
        depends_on:
            - elasticsearch
        networks:
            - my_network

    kibana:
        image: docker.elastic.co/kibana/kibana:7.17.4
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        depends_on:
            - elasticsearch
        networks:
            - my_network

volumes:
    postgres-data:
    mongo-data:
    es-data:

networks:
    my_network:
